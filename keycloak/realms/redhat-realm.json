{
  "id" : "5e8b171b-c06b-4057-8413-69b3edb8c88b",
  "realm" : "redhat",
  "notBefore" : 0,
  "defaultSignatureAlgorithm" : "RS256",
  "revokeRefreshToken" : false,
  "refreshTokenMaxReuse" : 0,
  "accessTokenLifespan" : 300,
  "accessTokenLifespanForImplicitFlow" : 900,
  "ssoSessionIdleTimeout" : 1800,
  "ssoSessionMaxLifespan" : 36000,
  "ssoSessionIdleTimeoutRememberMe" : 0,
  "ssoSessionMaxLifespanRememberMe" : 0,
  "offlineSessionIdleTimeout" : 2592000,
  "offlineSessionMaxLifespanEnabled" : false,
  "offlineSessionMaxLifespan" : 5184000,
  "clientSessionIdleTimeout" : 0,
  "clientSessionMaxLifespan" : 0,
  "clientOfflineSessionIdleTimeout" : 0,
  "clientOfflineSessionMaxLifespan" : 0,
  "accessCodeLifespan" : 60,
  "accessCodeLifespanUserAction" : 300,
  "accessCodeLifespanLogin" : 1800,
  "actionTokenGeneratedByAdminLifespan" : 43200,
  "actionTokenGeneratedByUserLifespan" : 300,
  "oauth2DeviceCodeLifespan" : 600,
  "oauth2DevicePollingInterval" : 5,
  "enabled" : true,
  "sslRequired" : "external",
  "registrationAllowed" : false,
  "registrationEmailAsUsername" : false,
  "rememberMe" : false,
  "verifyEmail" : false,
  "loginWithEmailAllowed" : true,
  "duplicateEmailsAllowed" : false,
  "resetPasswordAllowed" : false,
  "editUsernameAllowed" : false,
  "bruteForceProtected" : false,
  "permanentLockout" : false,
  "maxTemporaryLockouts" : 0,
  "maxFailureWaitSeconds" : 900,
  "minimumQuickLoginWaitSeconds" : 60,
  "waitIncrementSeconds" : 60,
  "quickLoginCheckMilliSeconds" : 1000,
  "maxDeltaTimeSeconds" : 43200,
  "failureFactor" : 30,
  "roles" : {
    "realm" : [ {
      "id" : "60317de3-90aa-48dc-b41a-b267a2ac8bec",
      "name" : "USER",
      "description" : "",
      "composite" : false,
      "clientRole" : false,
      "containerId" : "5e8b171b-c06b-4057-8413-69b3edb8c88b",
      "attributes" : { }
    }, {
      "id" : "95bec950-6a0e-4d03-95d6-2764ba61c992",
      "name" : "uma_authorization",
      "description" : "${role_uma_authorization}",
      "composite" : false,
      "clientRole" : false,
      "containerId" : "5e8b171b-c06b-4057-8413-69b3edb8c88b",
      "attributes" : { }
    }, {
      "id" : "c367e742-570a-446e-aea9-d63f5722c101",
      "name" : "offline_access",
      "description" : "${role_offline-access}",
      "composite" : false,
      "clientRole" : false,
      "containerId" : "5e8b171b-c06b-4057-8413-69b3edb8c88b",
      "attributes" : { }
    }, {
      "id" : "9a3da039-401a-45a8-bb60-928a7961324f",
      "name" : "default-roles-redhat",
      "description" : "${role_default-roles}",
      "composite" : true,
      "composites" : {
        "realm" : [ "offline_access", "uma_authorization", "USER" ],
        "client" : {
          "account" : [ "manage-account", "view-profile" ]
        }
      },
      "clientRole" : false,
      "containerId" : "5e8b171b-c06b-4057-8413-69b3edb8c88b",
      "attributes" : { }
    } ],
    "client" : {
      "realm-management" : [ {
        "id" : "d53582e3-344f-4abf-abd7-c8d360ef9d61",
        "name" : "manage-realm",
        "description" : "${role_manage-realm}",
        "composite" : false,
        "clientRole" : true,
        "containerId" : "541bc1f4-7e90-4395-9375-fa5d7ad40c31",
        "attributes" : { }
      }, {
        "id" : "d5c3b8b6-97fb-484b-85e6-d9030268c768",
        "name" : "query-users",
        "description" : "${role_query-users}",
        "composite" : false,
        "clientRole" : true,
        "containerId" : "541bc1f4-7e90-4395-9375-fa5d7ad40c31",
        "attributes" : { }
      }, {
        "id" : "de3722e2-f6bf-4708-b3d5-bf79df763171",
        "name" : "manage-clients",
        "description" : "${role_manage-clients}",
        "composite" : false,
        "clientRole" : true,
        "containerId" : "541bc1f4-7e90-4395-9375-fa5d7ad40c31",
        "attributes" : { }
      }, {
        "id" : "ef404599-e142-4d18-8bbf-55978b58ec1f",
        "name" : "query-groups",
        "description" : "${role_query-groups}",
        "composite" : false,
        "clientRole" : true,
        "containerId" : "541bc1f4-7e90-4395-9375-fa5d7ad40c31",
        "attributes" : { }
      }, {
        "id" : "c7c249f0-9947-4aac-afc0-388654d5c724",
        "name" : "view-clients",
        "description" : "${role_view-clients}",
        "composite" : true,
        "composites" : {
          "client" : {
            "realm-management" : [ "query-clients" ]
          }
        },
        "clientRole" : true,
        "containerId" : "541bc1f4-7e90-4395-9375-fa5d7ad40c31",
        "attributes" : { }
      }, {
        "id" : "ae891f0d-8c39-404a-81d3-156cfc0091e2",
        "name" : "query-clients",
        "description" : "${role_query-clients}",
        "composite" : false,
        "clientRole" : true,
        "containerId" : "541bc1f4-7e90-4395-9375-fa5d7ad40c31",
        "attributes" : { }
      }, {
        "id" : "764a429a-dfc6-4f05-a7a0-08963d66e098",
        "name" : "view-users",
        "description" : "${role_view-users}",
        "composite" : true,
        "composites" : {
          "client" : {
            "realm-management" : [ "query-users", "query-groups" ]
          }
        },
        "clientRole" : true,
        "containerId" : "541bc1f4-7e90-4395-9375-fa5d7ad40c31",
        "attributes" : { }
      }, {
        "id" : "0d2ebf36-9f8c-4def-ac39-8588223b9659",
        "name" : "create-client",
        "description" : "${role_create-client}",
        "composite" : false,
        "clientRole" : true,
        "containerId" : "541bc1f4-7e90-4395-9375-fa5d7ad40c31",
        "attributes" : { }
      }, {
        "id" : "04e56552-81ae-46a3-8c35-6ae10b688876",
        "name" : "realm-admin",
        "description" : "${role_realm-admin}",
        "composite" : true,
        "composites" : {
          "client" : {
            "realm-management" : [ "manage-realm", "query-users", "manage-clients", "view-clients", "query-groups", "query-clients", "view-users", "create-client", "view-authorization", "query-realms", "impersonation", "manage-events", "view-realm", "manage-authorization", "manage-users", "view-events", "manage-identity-providers", "view-identity-providers" ]
          }
        },
        "clientRole" : true,
        "containerId" : "541bc1f4-7e90-4395-9375-fa5d7ad40c31",
        "attributes" : { }
      }, {
        "id" : "297648ec-0ce0-487e-b185-2122089f2858",
        "name" : "view-authorization",
        "description" : "${role_view-authorization}",
        "composite" : false,
        "clientRole" : true,
        "containerId" : "541bc1f4-7e90-4395-9375-fa5d7ad40c31",
        "attributes" : { }
      }, {
        "id" : "d61bfd5d-10e1-4b21-af32-c251205153a0",
        "name" : "query-realms",
        "description" : "${role_query-realms}",
        "composite" : false,
        "clientRole" : true,
        "containerId" : "541bc1f4-7e90-4395-9375-fa5d7ad40c31",
        "attributes" : { }
      }, {
        "id" : "ef7947f3-132b-41d3-84b4-587f1871a3f5",
        "name" : "impersonation",
        "description" : "${role_impersonation}",
        "composite" : false,
        "clientRole" : true,
        "containerId" : "541bc1f4-7e90-4395-9375-fa5d7ad40c31",
        "attributes" : { }
      }, {
        "id" : "92cb92ac-2a0d-4329-a046-e0a6bdeafeda",
        "name" : "manage-events",
        "description" : "${role_manage-events}",
        "composite" : false,
        "clientRole" : true,
        "containerId" : "541bc1f4-7e90-4395-9375-fa5d7ad40c31",
        "attributes" : { }
      }, {
        "id" : "41ff4214-d364-4259-9be9-957742825e74",
        "name" : "view-realm",
        "description" : "${role_view-realm}",
        "composite" : false,
        "clientRole" : true,
        "containerId" : "541bc1f4-7e90-4395-9375-fa5d7ad40c31",
        "attributes" : { }
      }, {
        "id" : "4f9b57d1-8eec-4cdb-ada3-3ee17c72df9e",
        "name" : "manage-authorization",
        "description" : "${role_manage-authorization}",
        "composite" : false,
        "clientRole" : true,
        "containerId" : "541bc1f4-7e90-4395-9375-fa5d7ad40c31",
        "attributes" : { }
      }, {
        "id" : "a910ae7f-a3ad-4f0f-9f1b-2ad7d8ea6f75",
        "name" : "manage-users",
        "description" : "${role_manage-users}",
        "composite" : false,
        "clientRole" : true,
        "containerId" : "541bc1f4-7e90-4395-9375-fa5d7ad40c31",
        "attributes" : { }
      }, {
        "id" : "ed21879e-0022-48d7-aed8-73ebfd1c2a54",
        "name" : "manage-identity-providers",
        "description" : "${role_manage-identity-providers}",
        "composite" : false,
        "clientRole" : true,
        "containerId" : "541bc1f4-7e90-4395-9375-fa5d7ad40c31",
        "attributes" : { }
      }, {
        "id" : "547b8e0a-7a79-4ab6-847a-5bd4a9766d9e",
        "name" : "view-events",
        "description" : "${role_view-events}",
        "composite" : false,
        "clientRole" : true,
        "containerId" : "541bc1f4-7e90-4395-9375-fa5d7ad40c31",
        "attributes" : { }
      }, {
        "id" : "a5e3108c-4dd2-45f5-963c-026da9e5d71b",
        "name" : "view-identity-providers",
        "description" : "${role_view-identity-providers}",
        "composite" : false,
        "clientRole" : true,
        "containerId" : "541bc1f4-7e90-4395-9375-fa5d7ad40c31",
        "attributes" : { }
      } ],
      "security-admin-console" : [ ],
      "cargotracker" : [ {
        "id" : "833eebff-58e5-4eb1-aba6-fb8949adc8d2",
        "name" : "uma_protection",
        "composite" : false,
        "clientRole" : true,
        "containerId" : "43756c22-685e-4503-929c-b0803df3f675",
        "attributes" : { }
      } ],
      "admin-cli" : [ ],
      "account-console" : [ ],
      "broker" : [ {
        "id" : "47ca1586-6973-44b2-a129-29c5279f023e",
        "name" : "read-token",
        "description" : "${role_read-token}",
        "composite" : false,
        "clientRole" : true,
        "containerId" : "f7c51cbb-27ef-4ae8-85c7-1fd4da04b194",
        "attributes" : { }
      } ],
      "account" : [ {
        "id" : "313c72ba-f710-4fad-b449-7f6867247f47",
        "name" : "delete-account",
        "description" : "${role_delete-account}",
        "composite" : false,
        "clientRole" : true,
        "containerId" : "802ddfbb-6adf-471f-ba43-ad55f8b7e765",
        "attributes" : { }
      }, {
        "id" : "737254dc-6305-4028-9f8e-463d1880a8dc",
        "name" : "view-applications",
        "description" : "${role_view-applications}",
        "composite" : false,
        "clientRole" : true,
        "containerId" : "802ddfbb-6adf-471f-ba43-ad55f8b7e765",
        "attributes" : { }
      }, {
        "id" : "47abc1a8-0f46-4809-a008-b519f783d153",
        "name" : "view-groups",
        "description" : "${role_view-groups}",
        "composite" : false,
        "clientRole" : true,
        "containerId" : "802ddfbb-6adf-471f-ba43-ad55f8b7e765",
        "attributes" : { }
      }, {
        "id" : "b86d4848-b37b-4ed1-894f-d19c26df8e75",
        "name" : "manage-account",
        "description" : "${role_manage-account}",
        "composite" : true,
        "composites" : {
          "client" : {
            "account" : [ "manage-account-links" ]
          }
        },
        "clientRole" : true,
        "containerId" : "802ddfbb-6adf-471f-ba43-ad55f8b7e765",
        "attributes" : { }
      }, {
        "id" : "ea317157-f17b-4b01-81da-2f2992257286",
        "name" : "manage-consent",
        "description" : "${role_manage-consent}",
        "composite" : true,
        "composites" : {
          "client" : {
            "account" : [ "view-consent" ]
          }
        },
        "clientRole" : true,
        "containerId" : "802ddfbb-6adf-471f-ba43-ad55f8b7e765",
        "attributes" : { }
      }, {
        "id" : "f92f856b-5cdd-4fb5-8cb1-8210a5e8774e",
        "name" : "view-consent",
        "description" : "${role_view-consent}",
        "composite" : false,
        "clientRole" : true,
        "containerId" : "802ddfbb-6adf-471f-ba43-ad55f8b7e765",
        "attributes" : { }
      }, {
        "id" : "6df247a4-aebe-4edf-a467-67834dc2b6b1",
        "name" : "manage-account-links",
        "description" : "${role_manage-account-links}",
        "composite" : false,
        "clientRole" : true,
        "containerId" : "802ddfbb-6adf-471f-ba43-ad55f8b7e765",
        "attributes" : { }
      }, {
        "id" : "2fa92909-0d34-40bb-aa3c-f23798dba023",
        "name" : "view-profile",
        "description" : "${role_view-profile}",
        "composite" : false,
        "clientRole" : true,
        "containerId" : "802ddfbb-6adf-471f-ba43-ad55f8b7e765",
        "attributes" : { }
      } ]
    }
  },
  "groups" : [ ],
  "defaultRole" : {
    "id" : "9a3da039-401a-45a8-bb60-928a7961324f",
    "name" : "default-roles-redhat",
    "description" : "${role_default-roles}",
    "composite" : true,
    "clientRole" : false,
    "containerId" : "5e8b171b-c06b-4057-8413-69b3edb8c88b"
  },
  "requiredCredentials" : [ "password" ],
  "otpPolicyType" : "totp",
  "otpPolicyAlgorithm" : "HmacSHA1",
  "otpPolicyInitialCounter" : 0,
  "otpPolicyDigits" : 6,
  "otpPolicyLookAheadWindow" : 1,
  "otpPolicyPeriod" : 30,
  "otpPolicyCodeReusable" : false,
  "otpSupportedApplications" : [ "totpAppFreeOTPName", "totpAppGoogleName", "totpAppMicrosoftAuthenticatorName" ],
  "localizationTexts" : { },
  "webAuthnPolicyRpEntityName" : "keycloak",
  "webAuthnPolicySignatureAlgorithms" : [ "ES256" ],
  "webAuthnPolicyRpId" : "",
  "webAuthnPolicyAttestationConveyancePreference" : "not specified",
  "webAuthnPolicyAuthenticatorAttachment" : "not specified",
  "webAuthnPolicyRequireResidentKey" : "not specified",
  "webAuthnPolicyUserVerificationRequirement" : "not specified",
  "webAuthnPolicyCreateTimeout" : 0,
  "webAuthnPolicyAvoidSameAuthenticatorRegister" : false,
  "webAuthnPolicyAcceptableAaguids" : [ ],
  "webAuthnPolicyExtraOrigins" : [ ],
  "webAuthnPolicyPasswordlessRpEntityName" : "keycloak",
  "webAuthnPolicyPasswordlessSignatureAlgorithms" : [ "ES256" ],
  "webAuthnPolicyPasswordlessRpId" : "",
  "webAuthnPolicyPasswordlessAttestationConveyancePreference" : "not specified",
  "webAuthnPolicyPasswordlessAuthenticatorAttachment" : "not specified",
  "webAuthnPolicyPasswordlessRequireResidentKey" : "not specified",
  "webAuthnPolicyPasswordlessUserVerificationRequirement" : "not specified",
  "webAuthnPolicyPasswordlessCreateTimeout" : 0,
  "webAuthnPolicyPasswordlessAvoidSameAuthenticatorRegister" : false,
  "webAuthnPolicyPasswordlessAcceptableAaguids" : [ ],
  "webAuthnPolicyPasswordlessExtraOrigins" : [ ],
  "users" : [ {
    "id" : "b5d192af-8c49-4e7a-a96f-38422e55fe74",
    "username" : "cargouser",
    "firstName" : "Cargo",
    "lastName" : "User",
    "email" : "cargouser@jakarta.org",
    "emailVerified" : true,
    "createdTimestamp" : 1717969779112,
    "enabled" : true,
    "totp" : false,
    "credentials" : [ {
      "id" : "4d6b4057-3670-4815-bbff-fd2c77b8994d",
      "type" : "password",
      "userLabel" : "My password",
      "createdDate" : 1717969796497,
      "secretData" : "{\"value\":\"5Gn48TJ1iSPk6NoMHjJ16ftGuF0WbkHjQmO03+DI0U7PT2GodInwATOYbweGwRrp/weawFiwuldzDrb9PVORtg==\",\"salt\":\"Bji9o64BaldiV/KnQ8sy6Q==\",\"additionalParameters\":{}}",
      "credentialData" : "{\"hashIterations\":210000,\"algorithm\":\"pbkdf2-sha512\",\"additionalParameters\":{}}"
    } ],
    "disableableCredentialTypes" : [ ],
    "requiredActions" : [ ],
    "realmRoles" : [ "USER", "default-roles-redhat" ],
    "notBefore" : 0,
    "groups" : [ ]
  }, {
    "id" : "a9095b13-35d5-470d-8e8e-580f860e7d5b",
    "username" : "service-account-cargotracker",
    "emailVerified" : false,
    "createdTimestamp" : 1717968970304,
    "enabled" : true,
    "totp" : false,
    "serviceAccountClientId" : "cargotracker",
    "credentials" : [ ],
    "disableableCredentialTypes" : [ ],
    "requiredActions" : [ ],
    "realmRoles" : [ "default-roles-redhat" ],
    "clientRoles" : {
      "cargotracker" : [ "uma_protection" ]
    },
    "notBefore" : 0,
    "groups" : [ ]
  } ],
  "scopeMappings" : [ {
    "clientScope" : "offline_access",
    "roles" : [ "offline_access" ]
  } ],
  "clientScopeMappings" : {
    "account" : [ {
      "client" : "account-console",
      "roles" : [ "manage-account", "view-groups" ]
    } ]
  },
  "clients" : [ {
    "id" : "802ddfbb-6adf-471f-ba43-ad55f8b7e765",
    "clientId" : "account",
    "name" : "${client_account}",
    "rootUrl" : "${authBaseUrl}",
    "baseUrl" : "/realms/redhat/account/",
    "surrogateAuthRequired" : false,
    "enabled" : true,
    "alwaysDisplayInConsole" : false,
    "clientAuthenticatorType" : "client-secret",
    "redirectUris" : [ "/realms/redhat/account/*" ],
    "webOrigins" : [ ],
    "notBefore" : 0,
    "bearerOnly" : false,
    "consentRequired" : false,
    "standardFlowEnabled" : true,
    "implicitFlowEnabled" : false,
    "directAccessGrantsEnabled" : false,
    "serviceAccountsEnabled" : false,
    "publicClient" : true,
    "frontchannelLogout" : false,
    "protocol" : "openid-connect",
    "attributes" : {
      "post.logout.redirect.uris" : "+"
    },
    "authenticationFlowBindingOverrides" : { },
    "fullScopeAllowed" : false,
    "nodeReRegistrationTimeout" : 0,
    "protocolMappers" : [ {
      "id" : "4580eaa7-5eba-47c0-a5c1-bef1e0e817ee",
      "name" : "docker-v2-allow-all-mapper",
      "protocol" : "docker-v2",
      "protocolMapper" : "docker-v2-allow-all-mapper",
      "consentRequired" : false,
      "config" : { }
    } ],
    "defaultClientScopes" : [ "web-origins", "acr", "profile", "roles", "email" ],
    "optionalClientScopes" : [ "address", "phone", "offline_access", "microprofile-jwt" ]
  }, {
    "id" : "bceee48c-c72b-497a-8b68-d3e64a54ebb2",
    "clientId" : "account-console",
    "name" : "${client_account-console}",
    "rootUrl" : "${authBaseUrl}",
    "baseUrl" : "/realms/redhat/account/",
    "surrogateAuthRequired" : false,
    "enabled" : true,
    "alwaysDisplayInConsole" : false,
    "clientAuthenticatorType" : "client-secret",
    "redirectUris" : [ "/realms/redhat/account/*" ],
    "webOrigins" : [ ],
    "notBefore" : 0,
    "bearerOnly" : false,
    "consentRequired" : false,
    "standardFlowEnabled" : true,
    "implicitFlowEnabled" : false,
    "directAccessGrantsEnabled" : false,
    "serviceAccountsEnabled" : false,
    "publicClient" : true,
    "frontchannelLogout" : false,
    "protocol" : "openid-connect",
    "attributes" : {
      "post.logout.redirect.uris" : "+",
      "pkce.code.challenge.method" : "S256"
    },
    "authenticationFlowBindingOverrides" : { },
    "fullScopeAllowed" : false,
    "nodeReRegistrationTimeout" : 0,
    "protocolMappers" : [ {
      "id" : "e7eb4379-4ed5-427e-87d8-2d15225c6abe",
      "name" : "docker-v2-allow-all-mapper",
      "protocol" : "docker-v2",
      "protocolMapper" : "docker-v2-allow-all-mapper",
      "consentRequired" : false,
      "config" : { }
    }, {
      "id" : "9d297ef3-b156-4f6d-b333-1195131aea47",
      "name" : "audience resolve",
      "protocol" : "openid-connect",
      "protocolMapper" : "oidc-audience-resolve-mapper",
      "consentRequired" : false,
      "config" : { }
    } ],
    "defaultClientScopes" : [ "web-origins", "acr", "profile", "roles", "microprofile-jwt", "email" ],
    "optionalClientScopes" : [ "address", "phone", "offline_access" ]
  }, {
    "id" : "5eee9a8a-e176-4964-9310-49eca7f68b5c",
    "clientId" : "admin-cli",
    "name" : "${client_admin-cli}",
    "surrogateAuthRequired" : false,
    "enabled" : true,
    "alwaysDisplayInConsole" : false,
    "clientAuthenticatorType" : "client-secret",
    "redirectUris" : [ ],
    "webOrigins" : [ ],
    "notBefore" : 0,
    "bearerOnly" : false,
    "consentRequired" : false,
    "standardFlowEnabled" : false,
    "implicitFlowEnabled" : false,
    "directAccessGrantsEnabled" : true,
    "serviceAccountsEnabled" : false,
    "publicClient" : true,
    "frontchannelLogout" : false,
    "protocol" : "openid-connect",
    "attributes" : { },
    "authenticationFlowBindingOverrides" : { },
    "fullScopeAllowed" : false,
    "nodeReRegistrationTimeout" : 0,
    "protocolMappers" : [ {
      "id" : "baac3871-c3fd-4556-a8c7-74fe28f5a2f0",
      "name" : "docker-v2-allow-all-mapper",
      "protocol" : "docker-v2",
      "protocolMapper" : "docker-v2-allow-all-mapper",
      "consentRequired" : false,
      "config" : { }
    } ],
    "defaultClientScopes" : [ "web-origins", "acr", "profile", "roles", "email" ],
    "optionalClientScopes" : [ "address", "phone", "offline_access", "microprofile-jwt" ]
  }, {
    "id" : "f7c51cbb-27ef-4ae8-85c7-1fd4da04b194",
    "clientId" : "broker",
    "name" : "${client_broker}",
    "surrogateAuthRequired" : false,
    "enabled" : true,
    "alwaysDisplayInConsole" : false,
    "clientAuthenticatorType" : "client-secret",
    "redirectUris" : [ ],
    "webOrigins" : [ ],
    "notBefore" : 0,
    "bearerOnly" : true,
    "consentRequired" : false,
    "standardFlowEnabled" : true,
    "implicitFlowEnabled" : false,
    "directAccessGrantsEnabled" : false,
    "serviceAccountsEnabled" : false,
    "publicClient" : false,
    "frontchannelLogout" : false,
    "protocol" : "openid-connect",
    "attributes" : { },
    "authenticationFlowBindingOverrides" : { },
    "fullScopeAllowed" : false,
    "nodeReRegistrationTimeout" : 0,
    "protocolMappers" : [ {
      "id" : "66c42b62-a153-4846-8f3a-87f9e46e9e89",
      "name" : "docker-v2-allow-all-mapper",
      "protocol" : "docker-v2",
      "protocolMapper" : "docker-v2-allow-all-mapper",
      "consentRequired" : false,
      "config" : { }
    } ],
    "defaultClientScopes" : [ "web-origins", "acr", "profile", "roles", "email" ],
    "optionalClientScopes" : [ "address", "phone", "offline_access", "microprofile-jwt" ]
  }, {
    "id" : "43756c22-685e-4503-929c-b0803df3f675",
    "clientId" : "cargotracker",
    "name" : "Cargo Tracker",
    "description" : "",
    "rootUrl" : "",
    "adminUrl" : "",
    "baseUrl" : "",
    "surrogateAuthRequired" : false,
    "enabled" : true,
    "alwaysDisplayInConsole" : false,
    "clientAuthenticatorType" : "client-secret",
    "secret" : "IAyww8lRxZwuZ1OxJjo39HXKQvObkbvv",
    "redirectUris" : [ "*" ],
    "webOrigins" : [ "*" ],
    "notBefore" : 0,
    "bearerOnly" : false,
    "consentRequired" : false,
    "standardFlowEnabled" : true,
    "implicitFlowEnabled" : true,
    "directAccessGrantsEnabled" : true,
    "serviceAccountsEnabled" : true,
    "authorizationServicesEnabled" : true,
    "publicClient" : false,
    "frontchannelLogout" : true,
    "protocol" : "openid-connect",
    "attributes" : {
      "oidc.ciba.grant.enabled" : "false",
      "client.secret.creation.time" : "1717968970",
      "backchannel.logout.session.required" : "true",
      "post.logout.redirect.uris" : "*",
      "display.on.consent.screen" : "false",
      "oauth2.device.authorization.grant.enabled" : "false",
      "backchannel.logout.revoke.offline.tokens" : "false"
    },
    "authenticationFlowBindingOverrides" : { },
    "fullScopeAllowed" : true,
    "nodeReRegistrationTimeout" : -1,
    "protocolMappers" : [ {
      "id" : "a39cdcd4-1f36-471d-b34c-f26d691ae318",
      "name" : "Client Host",
      "protocol" : "openid-connect",
      "protocolMapper" : "oidc-usersessionmodel-note-mapper",
      "consentRequired" : false,
      "config" : {
        "user.session.note" : "clientHost",
        "introspection.token.claim" : "true",
        "id.token.claim" : "true",
        "access.token.claim" : "true",
        "claim.name" : "clientHost",
        "jsonType.label" : "String"
      }
    }, {
      "id" : "42a97da9-808e-437d-a189-c56fc8db5fca",
      "name" : "Client IP Address",
      "protocol" : "openid-connect",
      "protocolMapper" : "oidc-usersessionmodel-note-mapper",
      "consentRequired" : false,
      "config" : {
        "user.session.note" : "clientAddress",
        "introspection.token.claim" : "true",
        "id.token.claim" : "true",
        "access.token.claim" : "true",
        "claim.name" : "clientAddress",
        "jsonType.label" : "String"
      }
    }, {
      "id" : "1ddc51c8-1199-442c-80c3-7d6b2de30563",
      "name" : "docker-v2-allow-all-mapper",
      "protocol" : "docker-v2",
      "protocolMapper" : "docker-v2-allow-all-mapper",
      "consentRequired" : false,
      "config" : { }
    }, {
      "id" : "b797fbc9-dbed-48fb-89d7-7e6aea1ba322",
      "name" : "Client ID",
      "protocol" : "openid-connect",
      "protocolMapper" : "oidc-usersessionmodel-note-mapper",
      "consentRequired" : false,
      "config" : {
        "user.session.note" : "client_id",
        "introspection.token.claim" : "true",
        "id.token.claim" : "true",
        "access.token.claim" : "true",
        "claim.name" : "client_id",
        "jsonType.label" : "String"
      }
    } ],
    "defaultClientScopes" : [ "web-origins", "acr", "profile", "roles", "email" ],
    "optionalClientScopes" : [ "address", "phone", "offline_access", "microprofile-jwt" ],
    "authorizationSettings" : {
      "allowRemoteResourceManagement" : true,
      "policyEnforcementMode" : "ENFORCING",
      "resources" : [ {
        "name" : "Default Resource",
        "type" : "urn:cargotracker:resources:default",
        "ownerManagedAccess" : false,
        "attributes" : { },
        "_id" : "f009c8bb-40fc-480b-b55b-8b7371193790",
        "uris" : [ "/*" ]
      } ],
      "policies" : [ {
        "id" : "fb9ec171-d5cc-4c1f-8702-fdd525d61a05",
        "name" : "Default Policy",
        "description" : "A policy that grants access only for users within this realm",
        "type" : "js",
        "logic" : "POSITIVE",
        "decisionStrategy" : "AFFIRMATIVE",
        "config" : {
          "code" : "// by default, grants any permission associated with this policy\n$evaluation.grant();\n"
        }
      }, {
        "id" : "d0cf36ed-b0d7-4673-b768-64f144535536",
        "name" : "Default Permission",
        "description" : "A permission that applies to the default resource type",
        "type" : "resource",
        "logic" : "POSITIVE",
        "decisionStrategy" : "UNANIMOUS",
        "config" : {
          "defaultResourceType" : "urn:cargotracker:resources:default",
          "applyPolicies" : "[\"Default Policy\"]"
        }
      } ],
      "scopes" : [ ],
      "decisionStrategy" : "UNANIMOUS"
    }
  }, {
    "id" : "541bc1f4-7e90-4395-9375-fa5d7ad40c31",
    "clientId" : "realm-management",
    "name" : "${client_realm-management}",
    "surrogateAuthRequired" : false,
    "enabled" : true,
    "alwaysDisplayInConsole" : false,
    "clientAuthenticatorType" : "client-secret",
    "redirectUris" : [ ],
    "webOrigins" : [ ],
    "notBefore" : 0,
    "bearerOnly" : true,
    "consentRequired" : false,
    "standardFlowEnabled" : true,
    "implicitFlowEnabled" : false,
    "directAccessGrantsEnabled" : false,
    "serviceAccountsEnabled" : false,
    "publicClient" : false,
    "frontchannelLogout" : false,
    "protocol" : "openid-connect",
    "attributes" : { },
    "authenticationFlowBindingOverrides" : { },
    "fullScopeAllowed" : false,
    "nodeReRegistrationTimeout" : 0,
    "protocolMappers" : [ {
      "id" : "7c2d1a72-0f80-4b37-a172-a529e8d9a253",
      "name" : "docker-v2-allow-all-mapper",
      "protocol" : "docker-v2",
      "protocolMapper" : "docker-v2-allow-all-mapper",
      "consentRequired" : false,
      "config" : { }
    } ],
    "defaultClientScopes" : [ "web-origins", "acr", "profile", "roles", "email" ],
    "optionalClientScopes" : [ "address", "phone", "offline_access", "microprofile-jwt" ]
  }, {
    "id" : "9990dddb-3bcf-4b74-bca8-9a69d8ff901f",
    "clientId" : "security-admin-console",
    "name" : "${client_security-admin-console}",
    "rootUrl" : "${authAdminUrl}",
    "baseUrl" : "/admin/redhat/console/",
    "surrogateAuthRequired" : false,
    "enabled" : true,
    "alwaysDisplayInConsole" : false,
    "clientAuthenticatorType" : "client-secret",
    "redirectUris" : [ "/admin/redhat/console/*" ],
    "webOrigins" : [ "+" ],
    "notBefore" : 0,
    "bearerOnly" : false,
    "consentRequired" : false,
    "standardFlowEnabled" : true,
    "implicitFlowEnabled" : false,
    "directAccessGrantsEnabled" : false,
    "serviceAccountsEnabled" : false,
    "publicClient" : true,
    "frontchannelLogout" : false,
    "protocol" : "openid-connect",
    "attributes" : {
      "post.logout.redirect.uris" : "+",
      "pkce.code.challenge.method" : "S256"
    },
    "authenticationFlowBindingOverrides" : { },
    "fullScopeAllowed" : false,
    "nodeReRegistrationTimeout" : 0,
    "protocolMappers" : [ {
      "id" : "2984e7db-71fe-465c-9514-e50a636293aa",
      "name" : "locale",
      "protocol" : "openid-connect",
      "protocolMapper" : "oidc-usermodel-attribute-mapper",
      "consentRequired" : false,
      "config" : {
        "introspection.token.claim" : "true",
        "userinfo.token.claim" : "true",
        "user.attribute" : "locale",
        "id.token.claim" : "true",
        "access.token.claim" : "true",
        "claim.name" : "locale",
        "jsonType.label" : "String"
      }
    }, {
      "id" : "6da288a6-08eb-42fa-857b-61be816a3d53",
      "name" : "docker-v2-allow-all-mapper",
      "protocol" : "docker-v2",
      "protocolMapper" : "docker-v2-allow-all-mapper",
      "consentRequired" : false,
      "config" : { }
    } ],
    "defaultClientScopes" : [ "web-origins", "acr", "profile", "roles", "email" ],
    "optionalClientScopes" : [ "address", "phone", "offline_access", "microprofile-jwt" ]
  } ],
  "clientScopes" : [ {
    "id" : "32b94abf-1ecd-40f3-b62e-989b94c61f2e",
    "name" : "offline_access",
    "description" : "OpenID Connect built-in scope: offline_access",
    "protocol" : "openid-connect",
    "attributes" : {
      "consent.screen.text" : "${offlineAccessScopeConsentText}",
      "display.on.consent.screen" : "true"
    }
  }, {
    "id" : "5f2a401a-3288-4cce-8988-f607e478532e",
    "name" : "address",
    "description" : "OpenID Connect built-in scope: address",
    "protocol" : "openid-connect",
    "attributes" : {
      "include.in.token.scope" : "true",
      "display.on.consent.screen" : "true",
      "consent.screen.text" : "${addressScopeConsentText}"
    },
    "protocolMappers" : [ {
      "id" : "881d769b-46e5-4477-a8c5-a948a8f87225",
      "name" : "address",
      "protocol" : "openid-connect",
      "protocolMapper" : "oidc-address-mapper",
      "consentRequired" : false,
      "config" : {
        "user.attribute.formatted" : "formatted",
        "user.attribute.country" : "country",
        "introspection.token.claim" : "true",
        "user.attribute.postal_code" : "postal_code",
        "userinfo.token.claim" : "true",
        "user.attribute.street" : "street",
        "id.token.claim" : "true",
        "user.attribute.region" : "region",
        "access.token.claim" : "true",
        "user.attribute.locality" : "locality"
      }
    } ]
  }, {
    "id" : "1b778ef7-e236-43e7-9eee-d61023b89a8d",
    "name" : "role_list",
    "description" : "SAML role list",
    "protocol" : "saml",
    "attributes" : {
      "consent.screen.text" : "${samlRoleListScopeConsentText}",
      "display.on.consent.screen" : "true"
    },
    "protocolMappers" : [ {
      "id" : "d0cdbfd3-1626-45c4-acdc-99b2eb24f4e5",
      "name" : "role list",
      "protocol" : "saml",
      "protocolMapper" : "saml-role-list-mapper",
      "consentRequired" : false,
      "config" : {
        "single" : "false",
        "attribute.nameformat" : "Basic",
        "attribute.name" : "Role"
      }
    } ]
  }, {
    "id" : "9211f3ee-c02e-47da-9bb0-07a9cb8d02b5",
    "name" : "email",
    "description" : "OpenID Connect built-in scope: email",
    "protocol" : "openid-connect",
    "attributes" : {
      "include.in.token.scope" : "true",
      "display.on.consent.screen" : "true",
      "consent.screen.text" : "${emailScopeConsentText}"
    },
    "protocolMappers" : [ {
      "id" : "e0bd6a5b-8b3c-4f5c-8a9a-69621933c14e",
      "name" : "email",
      "protocol" : "openid-connect",
      "protocolMapper" : "oidc-usermodel-attribute-mapper",
      "consentRequired" : false,
      "config" : {
        "introspection.token.claim" : "true",
        "userinfo.token.claim" : "true",
        "user.attribute" : "email",
        "id.token.claim" : "true",
        "access.token.claim" : "true",
        "claim.name" : "email",
        "jsonType.label" : "String"
      }
    }, {
      "id" : "4a38ebf7-0878-4c86-9f3c-99841394ceff",
      "name" : "email verified",
      "protocol" : "openid-connect",
      "protocolMapper" : "oidc-usermodel-property-mapper",
      "consentRequired" : false,
      "config" : {
        "introspection.token.claim" : "true",
        "userinfo.token.claim" : "true",
        "user.attribute" : "emailVerified",
        "id.token.claim" : "true",
        "access.token.claim" : "true",
        "claim.name" : "email_verified",
        "jsonType.label" : "boolean"
      }
    } ]
  }, {
    "id" : "387f276f-e0ac-4958-859e-cf4dc79214b5",
    "name" : "profile",
    "description" : "OpenID Connect built-in scope: profile",
    "protocol" : "openid-connect",
    "attributes" : {
      "include.in.token.scope" : "true",
      "display.on.consent.screen" : "true",
      "consent.screen.text" : "${profileScopeConsentText}"
    },
    "protocolMappers" : [ {
      "id" : "8152b60f-4213-477d-9f3a-5522f7ac5fc4",
      "name" : "birthdate",
      "protocol" : "openid-connect",
      "protocolMapper" : "oidc-usermodel-attribute-mapper",
      "consentRequired" : false,
      "config" : {
        "introspection.token.claim" : "true",
        "userinfo.token.claim" : "true",
        "user.attribute" : "birthdate",
        "id.token.claim" : "true",
        "access.token.claim" : "true",
        "claim.name" : "birthdate",
        "jsonType.label" : "String"
      }
    }, {
      "id" : "f77e9f91-4c3f-4650-9a5c-e08a83b387c2",
      "name" : "gender",
      "protocol" : "openid-connect",
      "protocolMapper" : "oidc-usermodel-attribute-mapper",
      "consentRequired" : false,
      "config" : {
        "introspection.token.claim" : "true",
        "userinfo.token.claim" : "true",
        "user.attribute" : "gender",
        "id.token.claim" : "true",
        "access.token.claim" : "true",
        "claim.name" : "gender",
        "jsonType.label" : "String"
      }
    }, {
      "id" : "5c058f30-0036-4d7c-9bb6-3c343640d469",
      "name" : "picture",
      "protocol" : "openid-connect",
      "protocolMapper" : "oidc-usermodel-attribute-mapper",
      "consentRequired" : false,
      "config" : {
        "introspection.token.claim" : "true",
        "userinfo.token.claim" : "true",
        "user.attribute" : "picture",
        "id.token.claim" : "true",
        "access.token.claim" : "true",
        "claim.name" : "picture",
        "jsonType.label" : "String"
      }
    }, {
      "id" : "85d263cd-0fdb-4782-98da-e881b0e180a9",
      "name" : "given name",
      "protocol" : "openid-connect",
      "protocolMapper" : "oidc-usermodel-attribute-mapper",
      "consentRequired" : false,
      "config" : {
        "introspection.token.claim" : "true",
        "userinfo.token.claim" : "true",
        "user.attribute" : "firstName",
        "id.token.claim" : "true",
        "access.token.claim" : "true",
        "claim.name" : "given_name",
        "jsonType.label" : "String"
      }
    }, {
      "id" : "e3052fd2-8c8a-4736-a999-cd90963ba52f",
      "name" : "username",
      "protocol" : "openid-connect",
      "protocolMapper" : "oidc-usermodel-attribute-mapper",
      "consentRequired" : false,
      "config" : {
        "introspection.token.claim" : "true",
        "userinfo.token.claim" : "true",
        "user.attribute" : "username",
        "id.token.claim" : "true",
        "access.token.claim" : "true",
        "claim.name" : "preferred_username",
        "jsonType.label" : "String"
      }
    }, {
      "id" : "a59063e5-e7fb-4997-874a-c61beb84bf91",
      "name" : "zoneinfo",
      "protocol" : "openid-connect",
      "protocolMapper" : "oidc-usermodel-attribute-mapper",
      "consentRequired" : false,
      "config" : {
        "introspection.token.claim" : "true",
        "userinfo.token.claim" : "true",
        "user.attribute" : "zoneinfo",
        "id.token.claim" : "true",
        "access.token.claim" : "true",
        "claim.name" : "zoneinfo",
        "jsonType.label" : "String"
      }
    }, {
      "id" : "614b20bd-f2c3-4461-8711-e25269fce573",
      "name" : "full name",
      "protocol" : "openid-connect",
      "protocolMapper" : "oidc-full-name-mapper",
      "consentRequired" : false,
      "config" : {
        "id.token.claim" : "true",
        "introspection.token.claim" : "true",
        "access.token.claim" : "true",
        "userinfo.token.claim" : "true"
      }
    }, {
      "id" : "86ff39ee-138f-46aa-81af-35345a163361",
      "name" : "website",
      "protocol" : "openid-connect",
      "protocolMapper" : "oidc-usermodel-attribute-mapper",
      "consentRequired" : false,
      "config" : {
        "introspection.token.claim" : "true",
        "userinfo.token.claim" : "true",
        "user.attribute" : "website",
        "id.token.claim" : "true",
        "access.token.claim" : "true",
        "claim.name" : "website",
        "jsonType.label" : "String"
      }
    }, {
      "id" : "5133b8cc-f833-4db7-b367-fa19045ce261",
      "name" : "updated at",
      "protocol" : "openid-connect",
      "protocolMapper" : "oidc-usermodel-attribute-mapper",
      "consentRequired" : false,
      "config" : {
        "introspection.token.claim" : "true",
        "userinfo.token.claim" : "true",
        "user.attribute" : "updatedAt",
        "id.token.claim" : "true",
        "access.token.claim" : "true",
        "claim.name" : "updated_at",
        "jsonType.label" : "long"
      }
    }, {
      "id" : "1e53c857-4583-47bd-aab8-6937a8de6b8e",
      "name" : "locale",
      "protocol" : "openid-connect",
      "protocolMapper" : "oidc-usermodel-attribute-mapper",
      "consentRequired" : false,
      "config" : {
        "introspection.token.claim" : "true",
        "userinfo.token.claim" : "true",
        "user.attribute" : "locale",
        "id.token.claim" : "true",
        "access.token.claim" : "true",
        "claim.name" : "locale",
        "jsonType.label" : "String"
      }
    }, {
      "id" : "98aa27fe-b7c4-49fd-b149-df7d67befd83",
      "name" : "nickname",
      "protocol" : "openid-connect",
      "protocolMapper" : "oidc-usermodel-attribute-mapper",
      "consentRequired" : false,
      "config" : {
        "introspection.token.claim" : "true",
        "userinfo.token.claim" : "true",
        "user.attribute" : "nickname",
        "id.token.claim" : "true",
        "access.token.claim" : "true",
        "claim.name" : "nickname",
        "jsonType.label" : "String"
      }
    }, {
      "id" : "a73985e7-c7c2-4e4d-b70c-0c2df2aefe70",
      "name" : "middle name",
      "protocol" : "openid-connect",
      "protocolMapper" : "oidc-usermodel-attribute-mapper",
      "consentRequired" : false,
      "config" : {
        "introspection.token.claim" : "true",
        "userinfo.token.claim" : "true",
        "user.attribute" : "middleName",
        "id.token.claim" : "true",
        "access.token.claim" : "true",
        "claim.name" : "middle_name",
        "jsonType.label" : "String"
      }
    }, {
      "id" : "1c8c1800-a3d0-4ad2-9439-a5fb8d8b9b6b",
      "name" : "family name",
      "protocol" : "openid-connect",
      "protocolMapper" : "oidc-usermodel-attribute-mapper",
      "consentRequired" : false,
      "config" : {
        "introspection.token.claim" : "true",
        "userinfo.token.claim" : "true",
        "user.attribute" : "lastName",
        "id.token.claim" : "true",
        "access.token.claim" : "true",
        "claim.name" : "family_name",
        "jsonType.label" : "String"
      }
    }, {
      "id" : "e078d366-ac8f-4bcd-9903-611ebf82a636",
      "name" : "profile",
      "protocol" : "openid-connect",
      "protocolMapper" : "oidc-usermodel-attribute-mapper",
      "consentRequired" : false,
      "config" : {
        "introspection.token.claim" : "true",
        "userinfo.token.claim" : "true",
        "user.attribute" : "profile",
        "id.token.claim" : "true",
        "access.token.claim" : "true",
        "claim.name" : "profile",
        "jsonType.label" : "String"
      }
    } ]
  }, {
    "id" : "52125446-9c28-4094-9dbc-328e0739cef5",
    "name" : "roles",
    "description" : "OpenID Connect scope for add user roles to the access token",
    "protocol" : "openid-connect",
    "attributes" : {
      "include.in.token.scope" : "false",
      "display.on.consent.screen" : "true",
      "consent.screen.text" : "${rolesScopeConsentText}"
    },
    "protocolMappers" : [ {
      "id" : "9edb735c-daa4-47a6-8751-49434473db86",
      "name" : "realm roles",
      "protocol" : "openid-connect",
      "protocolMapper" : "oidc-usermodel-realm-role-mapper",
      "consentRequired" : false,
      "config" : {
        "introspection.token.claim" : "true",
        "multivalued" : "true",
        "userinfo.token.claim" : "true",
        "user.attribute" : "foo",
        "id.token.claim" : "true",
        "lightweight.claim" : "false",
        "access.token.claim" : "true",
        "claim.name" : "realm_access.roles",
        "jsonType.label" : "String"
      }
    }, {
      "id" : "cc86675a-6ff5-46f4-80f0-ad9d67bbdeec",
      "name" : "client roles",
      "protocol" : "openid-connect",
      "protocolMapper" : "oidc-usermodel-client-role-mapper",
      "consentRequired" : false,
      "config" : {
        "introspection.token.claim" : "true",
        "multivalued" : "true",
        "user.attribute" : "foo",
        "access.token.claim" : "true",
        "claim.name" : "resource_access.${client_id}.roles",
        "jsonType.label" : "String"
      }
    }, {
      "id" : "272c0851-ae7e-429e-a57d-291b09f9678d",
      "name" : "audience resolve",
      "protocol" : "openid-connect",
      "protocolMapper" : "oidc-audience-resolve-mapper",
      "consentRequired" : false,
      "config" : {
        "introspection.token.claim" : "true",
        "access.token.claim" : "true"
      }
    } ]
  }, {
    "id" : "c65eb702-af4c-4723-acb3-db9c7a3bd552",
    "name" : "microprofile-jwt",
    "description" : "Microprofile - JWT built-in scope",
    "protocol" : "openid-connect",
    "attributes" : {
      "include.in.token.scope" : "true",
      "display.on.consent.screen" : "false"
    },
    "protocolMappers" : [ {
      "id" : "10a41355-3c64-41a4-9558-5bed688e2994",
      "name" : "upn",
      "protocol" : "openid-connect",
      "protocolMapper" : "oidc-usermodel-attribute-mapper",
      "consentRequired" : false,
      "config" : {
        "introspection.token.claim" : "true",
        "userinfo.token.claim" : "true",
        "user.attribute" : "username",
        "id.token.claim" : "true",
        "access.token.claim" : "true",
        "claim.name" : "upn",
        "jsonType.label" : "String"
      }
    }, {
      "id" : "21e625ca-dade-4b0d-9b2c-20699339e1ba",
      "name" : "groups",
      "protocol" : "openid-connect",
      "protocolMapper" : "oidc-usermodel-realm-role-mapper",
      "consentRequired" : false,
      "config" : {
        "introspection.token.claim" : "true",
        "multivalued" : "true",
        "user.attribute" : "foo",
        "id.token.claim" : "true",
        "access.token.claim" : "true",
        "claim.name" : "groups",
        "jsonType.label" : "String"
      }
    } ]
  }, {
    "id" : "5fc499d4-59d6-4198-882a-1fcd2ad26f6a",
    "name" : "web-origins",
    "description" : "OpenID Connect scope for add allowed web origins to the access token",
    "protocol" : "openid-connect",
    "attributes" : {
      "include.in.token.scope" : "false",
      "display.on.consent.screen" : "false",
      "consent.screen.text" : ""
    },
    "protocolMappers" : [ {
      "id" : "a1d78c48-d094-42f2-ba58-f8d839411d1d",
      "name" : "allowed web origins",
      "protocol" : "openid-connect",
      "protocolMapper" : "oidc-allowed-origins-mapper",
      "consentRequired" : false,
      "config" : {
        "introspection.token.claim" : "true",
        "access.token.claim" : "true"
      }
    } ]
  }, {
    "id" : "38046e31-9799-413a-8790-708b8ec76e79",
    "name" : "phone",
    "description" : "OpenID Connect built-in scope: phone",
    "protocol" : "openid-connect",
    "attributes" : {
      "include.in.token.scope" : "true",
      "display.on.consent.screen" : "true",
      "consent.screen.text" : "${phoneScopeConsentText}"
    },
    "protocolMappers" : [ {
      "id" : "f1ebb40d-658d-4030-91e6-37ebbe5cfbd6",
      "name" : "phone number",
      "protocol" : "openid-connect",
      "protocolMapper" : "oidc-usermodel-attribute-mapper",
      "consentRequired" : false,
      "config" : {
        "introspection.token.claim" : "true",
        "userinfo.token.claim" : "true",
        "user.attribute" : "phoneNumber",
        "id.token.claim" : "true",
        "access.token.claim" : "true",
        "claim.name" : "phone_number",
        "jsonType.label" : "String"
      }
    }, {
      "id" : "c4f1f911-1470-45d4-8ac9-23e9f7719d2c",
      "name" : "phone number verified",
      "protocol" : "openid-connect",
      "protocolMapper" : "oidc-usermodel-attribute-mapper",
      "consentRequired" : false,
      "config" : {
        "introspection.token.claim" : "true",
        "userinfo.token.claim" : "true",
        "user.attribute" : "phoneNumberVerified",
        "id.token.claim" : "true",
        "access.token.claim" : "true",
        "claim.name" : "phone_number_verified",
        "jsonType.label" : "boolean"
      }
    } ]
  }, {
    "id" : "50136c0d-3028-462b-87e0-2b75aba853d8",
    "name" : "acr",
    "description" : "OpenID Connect scope for add acr (authentication context class reference) to the token",
    "protocol" : "openid-connect",
    "attributes" : {
      "include.in.token.scope" : "false",
      "display.on.consent.screen" : "false"
    },
    "protocolMappers" : [ {
      "id" : "1b31a122-ee28-4f0f-805e-98f025ea0156",
      "name" : "acr loa level",
      "protocol" : "openid-connect",
      "protocolMapper" : "oidc-acr-mapper",
      "consentRequired" : false,
      "config" : {
        "id.token.claim" : "true",
        "introspection.token.claim" : "true",
        "access.token.claim" : "true"
      }
    } ]
  } ],
  "defaultDefaultClientScopes" : [ "role_list", "profile", "email", "roles", "web-origins", "acr" ],
  "defaultOptionalClientScopes" : [ "offline_access", "address", "phone", "microprofile-jwt" ],
  "browserSecurityHeaders" : {
    "contentSecurityPolicyReportOnly" : "",
    "xContentTypeOptions" : "nosniff",
    "referrerPolicy" : "no-referrer",
    "xRobotsTag" : "none",
    "xFrameOptions" : "SAMEORIGIN",
    "contentSecurityPolicy" : "frame-src 'self'; frame-ancestors 'self'; object-src 'none';",
    "xXSSProtection" : "1; mode=block",
    "strictTransportSecurity" : "max-age=31536000; includeSubDomains"
  },
  "smtpServer" : { },
  "eventsEnabled" : false,
  "eventsListeners" : [ "jboss-logging" ],
  "enabledEventTypes" : [ ],
  "adminEventsEnabled" : false,
  "adminEventsDetailsEnabled" : false,
  "identityProviders" : [ ],
  "identityProviderMappers" : [ ],
  "components" : {
    "org.keycloak.services.clientregistration.policy.ClientRegistrationPolicy" : [ {
      "id" : "75341e6a-d484-4974-9c3f-d90f16399363",
      "name" : "Trusted Hosts",
      "providerId" : "trusted-hosts",
      "subType" : "anonymous",
      "subComponents" : { },
      "config" : {
        "host-sending-registration-request-must-match" : [ "true" ],
        "client-uris-must-match" : [ "true" ]
      }
    }, {
      "id" : "ecb7376e-2eec-4efc-85f8-3e01c4004fb4",
      "name" : "Full Scope Disabled",
      "providerId" : "scope",
      "subType" : "anonymous",
      "subComponents" : { },
      "config" : { }
    }, {
      "id" : "15e27c1e-970e-4b17-ad68-317bcc421ee9",
      "name" : "Allowed Client Scopes",
      "providerId" : "allowed-client-templates",
      "subType" : "anonymous",
      "subComponents" : { },
      "config" : {
        "allow-default-scopes" : [ "true" ]
      }
    }, {
      "id" : "f09fa511-a65d-4f75-b1d9-dd2fac4a2144",
      "name" : "Consent Required",
      "providerId" : "consent-required",
      "subType" : "anonymous",
      "subComponents" : { },
      "config" : { }
    }, {
      "id" : "56ed22d4-7bae-467d-a96f-4c7a49dc76f5",
      "name" : "Max Clients Limit",
      "providerId" : "max-clients",
      "subType" : "anonymous",
      "subComponents" : { },
      "config" : {
        "max-clients" : [ "200" ]
      }
    }, {
      "id" : "20dd0eb2-e370-4afe-981d-a774e70bbb41",
      "name" : "Allowed Client Scopes",
      "providerId" : "allowed-client-templates",
      "subType" : "authenticated",
      "subComponents" : { },
      "config" : {
        "allow-default-scopes" : [ "true" ]
      }
    }, {
      "id" : "8a5076f5-f1a2-481f-84d1-7b5346a07965",
      "name" : "Allowed Protocol Mapper Types",
      "providerId" : "allowed-protocol-mappers",
      "subType" : "anonymous",
      "subComponents" : { },
      "config" : {
        "allowed-protocol-mapper-types" : [ "oidc-full-name-mapper", "oidc-address-mapper", "oidc-sha256-pairwise-sub-mapper", "oidc-usermodel-property-mapper", "oidc-usermodel-attribute-mapper", "saml-user-property-mapper", "saml-user-attribute-mapper", "saml-role-list-mapper" ]
      }
    }, {
      "id" : "aaed15ec-4d3c-4c0a-a358-a10a4d2483bf",
      "name" : "Allowed Protocol Mapper Types",
      "providerId" : "allowed-protocol-mappers",
      "subType" : "authenticated",
      "subComponents" : { },
      "config" : {
        "allowed-protocol-mapper-types" : [ "oidc-usermodel-attribute-mapper", "oidc-address-mapper", "saml-role-list-mapper", "saml-user-property-mapper", "saml-user-attribute-mapper", "oidc-full-name-mapper", "oidc-sha256-pairwise-sub-mapper", "oidc-usermodel-property-mapper" ]
      }
    } ],
    "org.keycloak.keys.KeyProvider" : [ {
      "id" : "f715dac6-ab2b-4ef7-9e5e-034495ff4726",
      "name" : "hmac-generated-hs512",
      "providerId" : "hmac-generated",
      "subComponents" : { },
      "config" : {
        "kid" : [ "368ab1d9-66ab-411c-8bbb-5e55f382d4e7" ],
        "secret" : [ "RvjbrM3uE8KtMUqKjg-WTThSIL1PnjDG7l_nXGS-RXDylmXEnAwZt9_5qr6CA5H8trUAF1veTyfUEQre56M9Gj_02b_xC_49vFgwOUa3Mq_KQWpN3Yy1FRA9b1ESBt_RlnBF0bTpPXfycpxVeCjmH9-Xd0wnXz4PHhO-s-IwIHM" ],
        "priority" : [ "100" ],
        "algorithm" : [ "HS512" ]
      }
    }, {
      "id" : "a3a451d4-5f7a-4b6d-9289-aedd7c591c28",
      "name" : "rsa-enc-generated",
      "providerId" : "rsa-enc-generated",
      "subComponents" : { },
      "config" : {
        "privateKey" : [ "MIIEogIBAAKCAQEAu4RR2gPzRNFx/Q3jptVqNPkWmK2umqaJ4E1JTDnAjMIzaq3UOnThyN7JBPvLyJjYxLkT3Vovp0DYi6oaCCqUWGPhjq65zuwhFjFllxX+NNyqaAfciH1RPHjmeTnsscvv60xJklDokOnp9XBK4C4/dPcP3QIPEdjt4gunbu2AHQiRCK9AB7JASqiIcQqKEHmJqD3NPscVy3qPohg6BJtNoLLV/gShQGuFPa4PxpyEKfVC2fMRlnwR3O5cWq18v+UiA21ROkg3bsWLbsotlG8yP4S+6ZoaihPAidZVOWTOX1r1CaYp+1GgTVmykCHe9+7zizFojfD/1o0Vp+vqx3k7MwIDAQABAoIBABG/L6n1BsCEHAgpmNqQxyj1TBSuF2DOkyz105KRwq3vsUMO6Y+QwU+r+hVtKTe2c4mGxKEF6I2pPvVU53rPYNPOvCmvUqmJQoZhrW4zqCfjnIMU/2OxjI8vGAzwFP0swmugADSHUMNqR/ixJHz8E4hj2438pGV5hOYIWVPPyXi1zWzb7mZvgmThPj4naSUhTz3oYmHeSm4Ph7GnKYGy5KcrmOby9zkWRnbRh2wyM+HVGGd3HMlGvjY1G5LGA3SLAWk0F5WPlfB4tJuhRk+LAo3jeKBB/KB2aLZCUKxrmTjmqopl23aVEEy43jyYkQLHDSQSnfvdG98r90AWoWbklaECgYEA/bZlCKBl7kkmSEAG3JOTQWYbymZASehnGULZ8yjhMTJE4+b/WCxOKAhQRn0Bk8EoSeyLvm9e4Te8lac+b4E6bkEbJDOiEM5suUTP9UGjKaI7S/FnPavI1sb3Cff9/sh5SI4zE92F74SL7jv07Bg3zBtJLHc4nybUi9D2R985ttMCgYEAvTUiz1uppawWVe0iKqYNIEabGJt0eq/rQFZVhyXWiLsbC2OG4LH8ke6FNpy5qgQC4vzmtKVT5hYgbfzwSnOKPgm0JdFBJ3hYxsIzGPvMq1xXe0bXTUd/bTtJfnIdLDpplyQeYL3f4NX2kVDnBtYOCdwDTtPqOgBbDohGssFebiECgYAv+hLG+9XqpoiHtxvVEE8TWeS9dHKJx1nfrAWc9skGzZO7aQ42NUKeTVwoyDDJKQieWg3e+B6ABlMyFYs3+L785HDmeqEV/oMO0dVlcoEROW1vIfo87kQvYTaL+wpb6LsOnl1IT2apcW4oocvh7X53qV0//FeHuQcOXXiFBNBcIwKBgBroO5MRjgapemOt3XYDN0qnv9a4BNCNw/7aSD93+hJnyWjNNpkttqVqLjeeAilTeLWfEZAPEuddri72EZYE6Fv6NUxLfeCHFNjvNSUQagLUlvxJDsVGrbBzBfidcdigVfPQhyFq3zOyOeZggvpN5qEwUKgdKuokss5WQveY2D0BAoGAZT9rlntpM3fw8DFaN7HbifY1Lg3HuZQKYmKNAod+UPrX1k3difCJS7rCYT6uph0mEMK6rfQb9VixeOxmJahZzdgygN6DZwpbr41EVLzMRJ7DvCNAE0n0qqMcRmRehTmXACf6dGgya3pXkY7zZ47l2c2tCla2b6c/cG1PCr0yA28=" ],
        "keyUse" : [ "ENC" ],
        "certificate" : [ "MIICmzCCAYMCBgGP/u0u3zANBgkqhkiG9w0BAQsFADARMQ8wDQYDVQQDDAZyZWRoYXQwHhcNMjQwNjA5MjEzMzI3WhcNMzQwNjA5MjEzNTA3WjARMQ8wDQYDVQQDDAZyZWRoYXQwggEiMA0GCSqGSIb3DQEBAQUAA4IBDwAwggEKAoIBAQC7hFHaA/NE0XH9DeOm1Wo0+RaYra6apongTUlMOcCMwjNqrdQ6dOHI3skE+8vImNjEuRPdWi+nQNiLqhoIKpRYY+GOrrnO7CEWMWWXFf403KpoB9yIfVE8eOZ5Oeyxy+/rTEmSUOiQ6en1cErgLj909w/dAg8R2O3iC6du7YAdCJEIr0AHskBKqIhxCooQeYmoPc0+xxXLeo+iGDoEm02gstX+BKFAa4U9rg/GnIQp9ULZ8xGWfBHc7lxarXy/5SIDbVE6SDduxYtuyi2UbzI/hL7pmhqKE8CJ1lU5ZM5fWvUJpin7UaBNWbKQId737vOLMWiN8P/WjRWn6+rHeTszAgMBAAEwDQYJKoZIhvcNAQELBQADggEBAJacMJyOr7JOXkA1MCPXnTm6ZbITlWNg5zRFI7dltc6ePVd4XholtVIGce43KLHT/xPBTThVYHuEcJ1wFAZ4KZ/SZLm4XI7ABmUsufcIOZ1bRUEP2xFIjXVnGWvkQkcJ6DbqmkKdPZ9UEooiI02f3l3HfY+KN6juA8vaxnUpRxp/Rfy3vwGYCtVq9kED2InH7raJvNIiQQ+MYJFe65C7kl1mT7aTD4/5/F8nsQD1n8zl3DBiW37FRVt5ZR72ZxHIXJEiB2jkZuLKUwec3Os3flmFzXZCaAdnuLwSG/peG/zPM+LOgSNAyHEc5X3vPNgFSV/RhSN2gN31smD363xnPj4=" ],
        "priority" : [ "100" ],
        "algorithm" : [ "RSA-OAEP" ]
      }
    }, {
      "id" : "edd2150d-3383-4654-98e6-80a4e7c04534",
      "name" : "aes-generated",
      "providerId" : "aes-generated",
      "subComponents" : { },
      "config" : {
        "kid" : [ "618b4b68-43a6-4db2-8e25-d9f1839d872b" ],
        "secret" : [ "TBXkqSovVASft6hZbDD8Jw" ],
        "priority" : [ "100" ]
      }
    }, {
      "id" : "9c8a9b71-816c-47dc-b229-72da74136b14",
      "name" : "rsa-generated",
      "providerId" : "rsa-generated",
      "subComponents" : { },
      "config" : {
        "privateKey" : [ "MIIEowIBAAKCAQEArqQ9wwC/Ms4/MkDMlrVdTjqb4KgoWw5iYXQXc0frzodevSWyNsugG4WWWvh7bz6J/Fnjoq9kt8UAybFGG7jl0UtVtv1lJwsssMT5VsmJRFRfCTteopWvzhKpwtXKk2F2P88CuldEyPJ90kEfatIRKVIA8lnlrG4/V4Mmbdimab1ma3TQvX1TwdlniRlkynvg4nq3DipVdU2Af887HmB2yRyOA0AldAr6b6ua4xfncrVHExLtb/5rhfyGmj1set0HtTpZe3t/gszy1BK9N3eA3T3Ue44t1yV+NvvTIjU657d7hfzZRtJ+yjDP6Vnr4/OZxTPL78Jp6wfYuZHniM7vSQIDAQABAoIBABAd2BVG3F4z6mEY2ciOtC2j+v6ghhjhGvMjY4af/ILyuyt5bxjfcccYbOe4RqvdeZ5wLTG2PfU3mPsEARRN2+eUrDRW7h7MSTOG+fuoXaKQprSTZghbB/5ceo4gbLFtLRx2XioUI6Tnu/TLTbrt5+eISc4Tvb5L7kyFLea1N6ZKTR8u+NDj+bQOgQ9LvdCbVMjERSVSk7xx9H1/43dmtVtxp4+Yx1tkLFfmrUbtzj6/n2VYDrblX28f+z70m/9PLp4FJ1LQU80eGO9I3T1q91Js5pN38cmCoCpdFiBU2ebuesqi15TEbMNh/667eUYtFzebeqSzuLONfJnnWWzsqIECgYEA5gg/qW0ayYS5fmpFHXxTDvxGTLsV/lPdttVeyC5mRG959hJfeIiuQPrXTmGYixyctb+0grRJ1AlAsN5LfN0KAhuVkOtxRa8kHsT5dXfFVas5FAnAemfc1XoimBmi6bSE8E37mLF5SIzWfRmCEj+m3KCX7aFnhv3hOJE5qH4OlncCgYEAwls++URUi+43ZdPKPfp4gc945+MBq9P9SwsZuGKtzga2yKZdrBDM0gDkVWlTHto/7TikAHMRG1xAIvxKMSTNA6/VUbT2+6DJFIInpkw3YtcWqAxHYhpw4m5nbp0aAtFRn9PfS8ZHieNUxpcox/anmboqrC6X8t9YDune4Lk5WD8CgYBN7LNsOKqfY5fW7DcXovscE3fZHHN54X01J5jhJV69hioBov22fk7RcmgnhEZBseKgax3CPULZUn0YrWVTGin+xstm+Ws42Pjad42uLnGp8MP4Nsl+bdrQcnxvnBelJeL26OP3OP/GBPfQDykR94AWM0zkUg4ZG74FBKVMn89fRwKBgGDyBr1regi6cGOYev7jWwzVImf4cbL18RhnlxLEFhH4g2AerAbR8nil/T8lZFK1ZsG7SQL4YoYVQ+Cvm4pb4u9925f//lqRXvud2I044z+oLiLwzQKAUeKAU5N3Raw2INLqai1v3+tFu9m7OJpVzE//7p0oOJ7rDQ+TVJsfiR0dAoGBAKciRP12w1GrYf/paGYuXEtExM3nPYB0CNNid08Tktm1YMtLCr7qL6xHNXjto4xO+Bz2clRHahpPUyc70t4WzX3/ce2M0M9bM7wiCQpc+dnkh0aN3X64AHCtMV8+/g8Avu/nOrnNjK9cgm3BUTk6bqzHu5nTaH8sh5o3hlpUfaz2" ],
        "keyUse" : [ "SIG" ],
        "certificate" : [ "MIICmzCCAYMCBgGP/u0tuzANBgkqhkiG9w0BAQsFADARMQ8wDQYDVQQDDAZyZWRoYXQwHhcNMjQwNjA5MjEzMzI3WhcNMzQwNjA5MjEzNTA3WjARMQ8wDQYDVQQDDAZyZWRoYXQwggEiMA0GCSqGSIb3DQEBAQUAA4IBDwAwggEKAoIBAQCupD3DAL8yzj8yQMyWtV1OOpvgqChbDmJhdBdzR+vOh169JbI2y6AbhZZa+HtvPon8WeOir2S3xQDJsUYbuOXRS1W2/WUnCyywxPlWyYlEVF8JO16ila/OEqnC1cqTYXY/zwK6V0TI8n3SQR9q0hEpUgDyWeWsbj9XgyZt2KZpvWZrdNC9fVPB2WeJGWTKe+DiercOKlV1TYB/zzseYHbJHI4DQCV0Cvpvq5rjF+dytUcTEu1v/muF/IaaPWx63Qe1Oll7e3+CzPLUEr03d4DdPdR7ji3XJX42+9MiNTrnt3uF/NlG0n7KMM/pWevj85nFM8vvwmnrB9i5keeIzu9JAgMBAAEwDQYJKoZIhvcNAQELBQADggEBADEvsIj+zoES1eYJh0l8k/DxZluV2aI65yqHB8JU7jeWT8onf3ntn/8A0TzSHiDITGjuj7PCHyIHsHNskaSEwZUReeESo5odC6n+ZraFKa3/L6RikKV1pYb1h66qdY4ucFForLKmLHUWSHTVMz9UWvlN3r50YkiAXvbcIhefz9IaavJKmkSdFb88tVfZtdlEDt964zwF3bwuSni6O7KXdPfjlQTfDC4mw9mDhymwE8jsQPgN+cH2R1c2EhtnbiLNSu7CTo08cPrw1yUhImanFsghnIAYDm+FhlkGIhkorghel7c2egp/8rLagsF74ntrZFHOQZLfpbhXE+s5YsKMBnY=" ],
        "priority" : [ "100" ]
      }
    } ]
  },
  "internationalizationEnabled" : false,
  "supportedLocales" : [ ],
  "authenticationFlows" : [ {
    "id" : "1f191237-b7b2-4720-949e-ad108f48da30",
    "alias" : "Account verification options",
    "description" : "Method with which to verity the existing account",
    "providerId" : "basic-flow",
    "topLevel" : false,
    "builtIn" : true,
    "authenticationExecutions" : [ {
      "authenticator" : "idp-email-verification",
      "authenticatorFlow" : false,
      "requirement" : "ALTERNATIVE",
      "priority" : 10,
      "autheticatorFlow" : false,
      "userSetupAllowed" : false
    }, {
      "authenticatorFlow" : true,
      "requirement" : "ALTERNATIVE",
      "priority" : 20,
      "autheticatorFlow" : true,
      "flowAlias" : "Verify Existing Account by Re-authentication",
      "userSetupAllowed" : false
    } ]
  }, {
    "id" : "1c1a897c-db50-4735-b149-a0f3d213fd9a",
    "alias" : "Browser - Conditional OTP",
    "description" : "Flow to determine if the OTP is required for the authentication",
    "providerId" : "basic-flow",
    "topLevel" : false,
    "builtIn" : true,
    "authenticationExecutions" : [ {
      "authenticator" : "conditional-user-configured",
      "authenticatorFlow" : false,
      "requirement" : "REQUIRED",
      "priority" : 10,
      "autheticatorFlow" : false,
      "userSetupAllowed" : false
    }, {
      "authenticator" : "auth-otp-form",
      "authenticatorFlow" : false,
      "requirement" : "REQUIRED",
      "priority" : 20,
      "autheticatorFlow" : false,
      "userSetupAllowed" : false
    } ]
  }, {
    "id" : "9af17298-1ff2-4901-b735-549b4938abdd",
    "alias" : "Direct Grant - Conditional OTP",
    "description" : "Flow to determine if the OTP is required for the authentication",
    "providerId" : "basic-flow",
    "topLevel" : false,
    "builtIn" : true,
    "authenticationExecutions" : [ {
      "authenticator" : "conditional-user-configured",
      "authenticatorFlow" : false,
      "requirement" : "REQUIRED",
      "priority" : 10,
      "autheticatorFlow" : false,
      "userSetupAllowed" : false
    }, {
      "authenticator" : "direct-grant-validate-otp",
      "authenticatorFlow" : false,
      "requirement" : "REQUIRED",
      "priority" : 20,
      "autheticatorFlow" : false,
      "userSetupAllowed" : false
    } ]
  }, {
    "id" : "5923d8a5-4fb1-4e96-87fc-9d00904fd677",
    "alias" : "First broker login - Conditional OTP",
    "description" : "Flow to determine if the OTP is required for the authentication",
    "providerId" : "basic-flow",
    "topLevel" : false,
    "builtIn" : true,
    "authenticationExecutions" : [ {
      "authenticator" : "conditional-user-configured",
      "authenticatorFlow" : false,
      "requirement" : "REQUIRED",
      "priority" : 10,
      "autheticatorFlow" : false,
      "userSetupAllowed" : false
    }, {
      "authenticator" : "auth-otp-form",
      "authenticatorFlow" : false,
      "requirement" : "REQUIRED",
      "priority" : 20,
      "autheticatorFlow" : false,
      "userSetupAllowed" : false
    } ]
  }, {
    "id" : "6100578d-1354-467e-b7bb-692426822338",
    "alias" : "Handle Existing Account",
    "description" : "Handle what to do if there is existing account with same email/username like authenticated identity provider",
    "providerId" : "basic-flow",
    "topLevel" : false,
    "builtIn" : true,
    "authenticationExecutions" : [ {
      "authenticator" : "idp-confirm-link",
      "authenticatorFlow" : false,
      "requirement" : "REQUIRED",
      "priority" : 10,
      "autheticatorFlow" : false,
      "userSetupAllowed" : false
    }, {
      "authenticatorFlow" : true,
      "requirement" : "REQUIRED",
      "priority" : 20,
      "autheticatorFlow" : true,
      "flowAlias" : "Account verification options",
      "userSetupAllowed" : false
    } ]
  }, {
    "id" : "e9df30ed-17ba-4c43-9c33-4de7a2f5dc60",
    "alias" : "Reset - Conditional OTP",
    "description" : "Flow to determine if the OTP should be reset or not. Set to REQUIRED to force.",
    "providerId" : "basic-flow",
    "topLevel" : false,
    "builtIn" : true,
    "authenticationExecutions" : [ {
      "authenticator" : "conditional-user-configured",
      "authenticatorFlow" : false,
      "requirement" : "REQUIRED",
      "priority" : 10,
      "autheticatorFlow" : false,
      "userSetupAllowed" : false
    }, {
      "authenticator" : "reset-otp",
      "authenticatorFlow" : false,
      "requirement" : "REQUIRED",
      "priority" : 20,
      "autheticatorFlow" : false,
      "userSetupAllowed" : false
    } ]
  }, {
    "id" : "4db6f50f-3d7f-4f7a-b1d3-fe7b6540bec4",
    "alias" : "User creation or linking",
    "description" : "Flow for the existing/non-existing user alternatives",
    "providerId" : "basic-flow",
    "topLevel" : false,
    "builtIn" : true,
    "authenticationExecutions" : [ {
      "authenticatorConfig" : "create unique user config",
      "authenticator" : "idp-create-user-if-unique",
      "authenticatorFlow" : false,
      "requirement" : "ALTERNATIVE",
      "priority" : 10,
      "autheticatorFlow" : false,
      "userSetupAllowed" : false
    }, {
      "authenticatorFlow" : true,
      "requirement" : "ALTERNATIVE",
      "priority" : 20,
      "autheticatorFlow" : true,
      "flowAlias" : "Handle Existing Account",
      "userSetupAllowed" : false
    } ]
  }, {
    "id" : "40d0c2a7-97a2-40b2-bee6-44769ac658e2",
    "alias" : "Verify Existing Account by Re-authentication",
    "description" : "Reauthentication of existing account",
    "providerId" : "basic-flow",
    "topLevel" : false,
    "builtIn" : true,
    "authenticationExecutions" : [ {
      "authenticator" : "idp-username-password-form",
      "authenticatorFlow" : false,
      "requirement" : "REQUIRED",
      "priority" : 10,
      "autheticatorFlow" : false,
      "userSetupAllowed" : false
    }, {
      "authenticatorFlow" : true,
      "requirement" : "CONDITIONAL",
      "priority" : 20,
      "autheticatorFlow" : true,
      "flowAlias" : "First broker login - Conditional OTP",
      "userSetupAllowed" : false
    } ]
  }, {
    "id" : "46845b39-829c-46e5-88ae-41a10e98c299",
    "alias" : "browser",
    "description" : "browser based authentication",
    "providerId" : "basic-flow",
    "topLevel" : true,
    "builtIn" : true,
    "authenticationExecutions" : [ {
      "authenticator" : "auth-cookie",
      "authenticatorFlow" : false,
      "requirement" : "ALTERNATIVE",
      "priority" : 10,
      "autheticatorFlow" : false,
      "userSetupAllowed" : false
    }, {
      "authenticator" : "auth-spnego",
      "authenticatorFlow" : false,
      "requirement" : "DISABLED",
      "priority" : 20,
      "autheticatorFlow" : false,
      "userSetupAllowed" : false
    }, {
      "authenticator" : "identity-provider-redirector",
      "authenticatorFlow" : false,
      "requirement" : "ALTERNATIVE",
      "priority" : 25,
      "autheticatorFlow" : false,
      "userSetupAllowed" : false
    }, {
      "authenticatorFlow" : true,
      "requirement" : "ALTERNATIVE",
      "priority" : 30,
      "autheticatorFlow" : true,
      "flowAlias" : "forms",
      "userSetupAllowed" : false
    } ]
  }, {
    "id" : "394ef3f7-bb65-44b7-8a13-bf9d2f5ed110",
    "alias" : "clients",
    "description" : "Base authentication for clients",
    "providerId" : "client-flow",
    "topLevel" : true,
    "builtIn" : true,
    "authenticationExecutions" : [ {
      "authenticator" : "client-secret",
      "authenticatorFlow" : false,
      "requirement" : "ALTERNATIVE",
      "priority" : 10,
      "autheticatorFlow" : false,
      "userSetupAllowed" : false
    }, {
      "authenticator" : "client-jwt",
      "authenticatorFlow" : false,
      "requirement" : "ALTERNATIVE",
      "priority" : 20,
      "autheticatorFlow" : false,
      "userSetupAllowed" : false
    }, {
      "authenticator" : "client-secret-jwt",
      "authenticatorFlow" : false,
      "requirement" : "ALTERNATIVE",
      "priority" : 30,
      "autheticatorFlow" : false,
      "userSetupAllowed" : false
    }, {
      "authenticator" : "client-x509",
      "authenticatorFlow" : false,
      "requirement" : "ALTERNATIVE",
      "priority" : 40,
      "autheticatorFlow" : false,
      "userSetupAllowed" : false
    } ]
  }, {
    "id" : "02c2352a-190b-4942-9b65-e4398f7f38b4",
    "alias" : "direct grant",
    "description" : "OpenID Connect Resource Owner Grant",
    "providerId" : "basic-flow",
    "topLevel" : true,
    "builtIn" : true,
    "authenticationExecutions" : [ {
      "authenticator" : "direct-grant-validate-username",
      "authenticatorFlow" : false,
      "requirement" : "REQUIRED",
      "priority" : 10,
      "autheticatorFlow" : false,
      "userSetupAllowed" : false
    }, {
      "authenticator" : "direct-grant-validate-password",
      "authenticatorFlow" : false,
      "requirement" : "REQUIRED",
      "priority" : 20,
      "autheticatorFlow" : false,
      "userSetupAllowed" : false
    }, {
      "authenticatorFlow" : true,
      "requirement" : "CONDITIONAL",
      "priority" : 30,
      "autheticatorFlow" : true,
      "flowAlias" : "Direct Grant - Conditional OTP",
      "userSetupAllowed" : false
    } ]
  }, {
    "id" : "b670f0e3-694b-44e9-b98c-1d7ad6600f50",
    "alias" : "docker auth",
    "description" : "Used by Docker clients to authenticate against the IDP",
    "providerId" : "basic-flow",
    "topLevel" : true,
    "builtIn" : true,
    "authenticationExecutions" : [ {
      "authenticator" : "docker-http-basic-authenticator",
      "authenticatorFlow" : false,
      "requirement" : "REQUIRED",
      "priority" : 10,
      "autheticatorFlow" : false,
      "userSetupAllowed" : false
    } ]
  }, {
    "id" : "085e4f2c-e552-4172-aae3-b22f26202b48",
    "alias" : "first broker login",
    "description" : "Actions taken after first broker login with identity provider account, which is not yet linked to any Keycloak account",
    "providerId" : "basic-flow",
    "topLevel" : true,
    "builtIn" : true,
    "authenticationExecutions" : [ {
      "authenticatorConfig" : "review profile config",
      "authenticator" : "idp-review-profile",
      "authenticatorFlow" : false,
      "requirement" : "REQUIRED",
      "priority" : 10,
      "autheticatorFlow" : false,
      "userSetupAllowed" : false
    }, {
      "authenticatorFlow" : true,
      "requirement" : "REQUIRED",
      "priority" : 20,
      "autheticatorFlow" : true,
      "flowAlias" : "User creation or linking",
      "userSetupAllowed" : false
    } ]
  }, {
    "id" : "4edcfceb-8cc7-4c4d-bef0-203527d65ca7",
    "alias" : "forms",
    "description" : "Username, password, otp and other auth forms.",
    "providerId" : "basic-flow",
    "topLevel" : false,
    "builtIn" : true,
    "authenticationExecutions" : [ {
      "authenticator" : "auth-username-password-form",
      "authenticatorFlow" : false,
      "requirement" : "REQUIRED",
      "priority" : 10,
      "autheticatorFlow" : false,
      "userSetupAllowed" : false
    }, {
      "authenticatorFlow" : true,
      "requirement" : "CONDITIONAL",
      "priority" : 20,
      "autheticatorFlow" : true,
      "flowAlias" : "Browser - Conditional OTP",
      "userSetupAllowed" : false
    } ]
  }, {
    "id" : "408fd6e0-cc39-4766-85c2-2945b4a9173d",
    "alias" : "registration",
    "description" : "registration flow",
    "providerId" : "basic-flow",
    "topLevel" : true,
    "builtIn" : true,
    "authenticationExecutions" : [ {
      "authenticator" : "registration-page-form",
      "authenticatorFlow" : true,
      "requirement" : "REQUIRED",
      "priority" : 10,
      "autheticatorFlow" : true,
      "flowAlias" : "registration form",
      "userSetupAllowed" : false
    } ]
  }, {
    "id" : "e45fe040-3731-4c18-9921-efc4a597896d",
    "alias" : "registration form",
    "description" : "registration form",
    "providerId" : "form-flow",
    "topLevel" : false,
    "builtIn" : true,
    "authenticationExecutions" : [ {
      "authenticator" : "registration-user-creation",
      "authenticatorFlow" : false,
      "requirement" : "REQUIRED",
      "priority" : 20,
      "autheticatorFlow" : false,
      "userSetupAllowed" : false
    }, {
      "authenticator" : "registration-password-action",
      "authenticatorFlow" : false,
      "requirement" : "REQUIRED",
      "priority" : 50,
      "autheticatorFlow" : false,
      "userSetupAllowed" : false
    }, {
      "authenticator" : "registration-recaptcha-action",
      "authenticatorFlow" : false,
      "requirement" : "DISABLED",
      "priority" : 60,
      "autheticatorFlow" : false,
      "userSetupAllowed" : false
    }, {
      "authenticator" : "registration-terms-and-conditions",
      "authenticatorFlow" : false,
      "requirement" : "DISABLED",
      "priority" : 70,
      "autheticatorFlow" : false,
      "userSetupAllowed" : false
    } ]
  }, {
    "id" : "6ef10bfa-4489-483b-81ad-d783152bb132",
    "alias" : "reset credentials",
    "description" : "Reset credentials for a user if they forgot their password or something",
    "providerId" : "basic-flow",
    "topLevel" : true,
    "builtIn" : true,
    "authenticationExecutions" : [ {
      "authenticator" : "reset-credentials-choose-user",
      "authenticatorFlow" : false,
      "requirement" : "REQUIRED",
      "priority" : 10,
      "autheticatorFlow" : false,
      "userSetupAllowed" : false
    }, {
      "authenticator" : "reset-credential-email",
      "authenticatorFlow" : false,
      "requirement" : "REQUIRED",
      "priority" : 20,
      "autheticatorFlow" : false,
      "userSetupAllowed" : false
    }, {
      "authenticator" : "reset-password",
      "authenticatorFlow" : false,
      "requirement" : "REQUIRED",
      "priority" : 30,
      "autheticatorFlow" : false,
      "userSetupAllowed" : false
    }, {
      "authenticatorFlow" : true,
      "requirement" : "CONDITIONAL",
      "priority" : 40,
      "autheticatorFlow" : true,
      "flowAlias" : "Reset - Conditional OTP",
      "userSetupAllowed" : false
    } ]
  }, {
    "id" : "e31b2eeb-5abf-4ee4-a171-7b47c287d58e",
    "alias" : "saml ecp",
    "description" : "SAML ECP Profile Authentication Flow",
    "providerId" : "basic-flow",
    "topLevel" : true,
    "builtIn" : true,
    "authenticationExecutions" : [ {
      "authenticator" : "http-basic-authenticator",
      "authenticatorFlow" : false,
      "requirement" : "REQUIRED",
      "priority" : 10,
      "autheticatorFlow" : false,
      "userSetupAllowed" : false
    } ]
  } ],
  "authenticatorConfig" : [ {
    "id" : "709642bc-8975-4225-a467-305ac9b87794",
    "alias" : "create unique user config",
    "config" : {
      "require.password.update.after.registration" : "false"
    }
  }, {
    "id" : "d2c5db86-7805-437f-b6ab-332024b1a130",
    "alias" : "review profile config",
    "config" : {
      "update.profile.on.first.login" : "missing"
    }
  } ],
  "requiredActions" : [ {
    "alias" : "CONFIGURE_TOTP",
    "name" : "Configure OTP",
    "providerId" : "CONFIGURE_TOTP",
    "enabled" : true,
    "defaultAction" : false,
    "priority" : 10,
    "config" : { }
  }, {
    "alias" : "TERMS_AND_CONDITIONS",
    "name" : "Terms and Conditions",
    "providerId" : "TERMS_AND_CONDITIONS",
    "enabled" : false,
    "defaultAction" : false,
    "priority" : 20,
    "config" : { }
  }, {
    "alias" : "UPDATE_PASSWORD",
    "name" : "Update Password",
    "providerId" : "UPDATE_PASSWORD",
    "enabled" : true,
    "defaultAction" : false,
    "priority" : 30,
    "config" : { }
  }, {
    "alias" : "UPDATE_PROFILE",
    "name" : "Update Profile",
    "providerId" : "UPDATE_PROFILE",
    "enabled" : true,
    "defaultAction" : false,
    "priority" : 40,
    "config" : { }
  }, {
    "alias" : "VERIFY_EMAIL",
    "name" : "Verify Email",
    "providerId" : "VERIFY_EMAIL",
    "enabled" : true,
    "defaultAction" : false,
    "priority" : 50,
    "config" : { }
  }, {
    "alias" : "delete_account",
    "name" : "Delete Account",
    "providerId" : "delete_account",
    "enabled" : false,
    "defaultAction" : false,
    "priority" : 60,
    "config" : { }
  }, {
    "alias" : "webauthn-register",
    "name" : "Webauthn Register",
    "providerId" : "webauthn-register",
    "enabled" : true,
    "defaultAction" : false,
    "priority" : 70,
    "config" : { }
  }, {
    "alias" : "webauthn-register-passwordless",
    "name" : "Webauthn Register Passwordless",
    "providerId" : "webauthn-register-passwordless",
    "enabled" : true,
    "defaultAction" : false,
    "priority" : 80,
    "config" : { }
  }, {
    "alias" : "VERIFY_PROFILE",
    "name" : "Verify Profile",
    "providerId" : "VERIFY_PROFILE",
    "enabled" : true,
    "defaultAction" : false,
    "priority" : 90,
    "config" : { }
  }, {
    "alias" : "delete_credential",
    "name" : "Delete Credential",
    "providerId" : "delete_credential",
    "enabled" : true,
    "defaultAction" : false,
    "priority" : 100,
    "config" : { }
  }, {
    "alias" : "update_user_locale",
    "name" : "Update User Locale",
    "providerId" : "update_user_locale",
    "enabled" : true,
    "defaultAction" : false,
    "priority" : 1000,
    "config" : { }
  } ],
  "browserFlow" : "browser",
  "registrationFlow" : "registration",
  "directGrantFlow" : "direct grant",
  "resetCredentialsFlow" : "reset credentials",
  "clientAuthenticationFlow" : "clients",
  "dockerAuthenticationFlow" : "docker auth",
  "firstBrokerLoginFlow" : "first broker login",
  "attributes" : {
    "cibaBackchannelTokenDeliveryMode" : "poll",
    "cibaExpiresIn" : "120",
    "cibaAuthRequestedUserHint" : "login_hint",
    "oauth2DeviceCodeLifespan" : "600",
    "oauth2DevicePollingInterval" : "5",
    "parRequestUriLifespan" : "60",
    "cibaInterval" : "5",
    "realmReusableOtpCode" : "false"
  },
  "keycloakVersion" : "24.0.4.redhat-00001",
  "userManagedAccessAllowed" : false,
  "clientProfiles" : {
    "profiles" : [ ]
  },
  "clientPolicies" : {
    "policies" : [ ]
  }
}